pico-8 cartridge // http://www.pico-8.com
version 18
__lua__

--init
function _init()

	palt(3, true)
	palt(0, false)
	state = 0
	
	plr = {
		sp=96,
		x=16,
		y=16,
		w=8,
		h=8,
		moving=false,
		flp = false, 
		d=0,
		acc=0.35,
		anim=0,
		move="down",
		health = 5,
		coins = 100,
		keys = 2,
	}
	
	difficulty = 0
	enemy = {}
	tiles = {}
	
 genlevel()
 genenemies()
end

-->8
--update and draw--

--this just handles moves right now
function _update()
 if state == 0 then
   if btnp(4) then
     state = 1
   end
 elseif state == 1 then
   plr_update()
   enemy_update()
 elseif state == 2 then
   if btnp(4) then
   		for i in all(tiles) do
						mset(i.x, i.y, 45)
					end
     _init()
     reboot()
   end
 end
end

--this draws the base map, player, and the generated wall tiles
function _draw()
  
 if state==0 then
   cls()
   print("use ⬆️⬇️⬅️➡️ \nkeys to move", 24, 16, 7)
   print("hold ❎ and walk at\nan enemy to attack", 24, 32, 7)
   print("press ❎ after walking \nup to a chest to open", 24, 48)
   print("press z to play", 32, 64, 7)
   print("i can't wait to meet you...", 12, 112, 1)
   for i = 1,4 do
     spr(147+i, 40+(8*i), 100)
   end
 elseif state==1 then
 
   cls()
   map(0, 0, 0, 0, 16, 16)
   spr(plr.sp, plr.x, plr.y,1,1,plr.flp)
   
   for i in all(tiles) do
  	  mset(i.x, i.y, i.s)
   end
  
   for j in all(enemy) do
  	  if j.health <= 0 then
	 		   del(enemy, j)
	 	  else
  		   spr(j.s, j.x, j.y)
  	  end
   end
  
   rectfill(0,0,128,7,0)
   spr(21, 128-24, 0)
   print(plr.coins, 128-16, 1, 10)
   spr(36, 128-40, 0)
   print(plr.keys, 128-32, 1, 10)
   
   for i = 1,5 do
     spr(19, -8 + (i*8), 0)
   end  
   
   for i = 1,3 do
     spr(1, 40+(i*8), 0)
   end
   
   for i = 1,plr.health do
     spr(20, -8 + (i*8), 0)
   end
  
 elseif state==2 then
   cls()
   camera(0,0)
   map(70,70,0,0,16,16)
   print("game over.\npress z to restart",40,60,7)
 end 
end

-->8
--collisions

function collide_map(obj,aim,flag)
	--obj = table x,y,w,h

	local x=obj.x local y=obj.y
	local w=obj.w local h=obj.h

	local x1=x local y1=y
	local x2=x+w-1 local y2=y+h-1

	--pixels to tiles

	x1/=8  x2/=8
	y1/=8  y2/=8


	if fget(mget(x1,y1),flag)
	or fget(mget(x1,y2),flag)
	or fget(mget(x2,y1),flag)
	or fget(mget(x2,y2),flag) then
		return true
	else
		return false
	end

end

function ranintochest(obj, aim)
	local x=obj.x local y=obj.y
	local w=obj.w local h=obj.h

	local x1=0 local y1=0
	local x2=0 local y2=0
	
	if aim=="left" then
		x1=x-1 y1=y
		x2=x-w y2=y+h-1
		
	elseif aim=="right" then 
		x1=x+1 y1=y
		x2=x+w y2=y+h-1
	
	elseif aim=="up" then
		x1=x  y1=y-h
		x2=x+w-1 y2=y-1
	
	elseif aim=="down" then 
		x1=x  y1=y+1
	 x2=x+w-1 y2=y+h
	end
	
	--pixels to tiles
	
	x1/=8  x2/=8
	y1/=8  y2/=8
	
	
	if fget(mget(x1,y1),1) then
		if btn(5) then
	 	mset(x1, y1, 18)
		plr.coins += 1
	 	end
	elseif fget(mget(x1,y2),1) then
		if btn(5) then
	 	mset(x1, y2, 18)
		 plr.coins += 1

	 	end
	elseif fget(mget(x2,y1),1) then
		if btn(5) then
	 	mset(x2, y1, 18)
		 plr.coins += 1

	 	end
	elseif fget(mget(x2,y2),1) then
	 if btn(5) then
	 	mset(x2, y2, 18)
		 plr.coins += 1

	 	end
		end	
end

function enemy_attack(obj,aim)
	local x=obj.x local y=obj.y
	local w=obj.w local h=obj.h

	local x1=0 local y1=0
	local x2=0 local y2=0
	
	if aim=="left" then
		x1=x-1 y1=y
		x2=x-w y2=y+h-1
		
	elseif aim=="right" then 
		x1=x+1 y1=y
		x2=x+w y2=y+h-1
	
	elseif aim=="up" then
		x1=x  y1=y-1
		x2=x+w-1 y2=y-h
	
	elseif aim=="down" then 
		x1=x  y1=y+1
	 x2=x+w-1 y2=y+h
	end
	
	
	if (plr.x == x1 and plr.y == y1)
	or (plr.x == x2 and plr.y == y1)
	or (plr.x == x1 and plr.y == y2)
	or (plr.x == x2 and plr.y == y2) then
	 plr.health -= 1
	 return true
		end	
end

function enemy_in_range()
		for i in all(enemy) do
			local x1=0 local y1=0
			local x2=0 local y2=0
			
			if plr.lastmove=="left" then
				x1=plr.x-1 y1=plr.y
				x2=plr.x-plr.w y2=plr.y+plr.h-1
		
			elseif plr.lastmove=="right" then 
				x1=plr.x+1 y1=plr.y
				x2=plr.x+plr.w y2=plr.y+plr.h-1
	
			elseif plr.lastmove=="up" then
				x1=plr.x  y1=plr.y-plr.h
				x2=plr.x+plr.w-1 y2=plr.y-1
	
			elseif plr.lastmove=="down" then 
				x1=plr.x  y1=plr.y+1
	 		x2=plr.x+plr.w-1 y2=plr.y+plr.h
			end
	
			if (i.x/8 == x1/8 and i.y/8 == y1/8)
			or (i.x/8 == x2/8 and i.y/8 == y1/8)
			or (i.x/8 == x1/8 and i.y/8 == y2/8)
			or (i.x/8 == x2/8 and i.y/8 == y2/8) then
	 		if btn(5) then
	 			i.health -= 1
	 		end
			end
		end
end
-->8
--map functions--

--this randomly generates walls
function genlevel()
  for i=3, 12 do
    for j= 3, 12 do
      if flr(rnd(15)) == 0 and i!=1 and j!= 1 then
        temp = {}
        temp.x = i
        temp.y = j
        temp.s = 12
        add(tiles,temp)
      elseif flr(rnd(150)) == 1 and i!=j and j!=1 then
        temp = {}
        temp.x = i
        temp.y = j
        temp.s = 17
        add(tiles, temp)
      end
    end
  end
end

function updatemap()
	enemy = {}
	
	for i in all(tiles) do
		mset(i.x, i.y, 45)
	end
	
	tiles = {}
	
	cls()
	
	genlevel()
	genenemies()
	
	map(0, 0, 0, 0, 16, 16)
  
 for i in all(tiles) do
   mset(i.x, i.y, i.s)
 end
  
 for j in all(enemy) do
   spr(j.s, j.x, j.y)
 end
end
-->8
--player functions--

function plr_update()
	
	if(plr.health <= 0) then
		state = 2
	end
	plr.moving = false
	plr.lastmove = plr.move
	
	ranintochest(plr, plr.lastmove)
	enemy_in_range()
	
	if btn(0) then
		plr.x-= 1
		plr.move = "left"
		plr.moving=true
		
		--animate 
		plr.flp = true
		plr_walk()
		
		if collide_map(plr,"left",0) then
			plr.x +=1
		end
		if plr.x < 0 then
			updatemap()
			plr.x = 128
		end
		--enemy_update()
	elseif btn(1) then
		plr.x += 1
		plr.move = "right"
		plr.moving=true
		
		--animate
		plr.flp = false
		plr_walk()
		
		if collide_map(plr,"right",0) then
			plr.x -= 1
		end
		if plr.x > 128 then
			updatemap()
			plr.x = 0
		end
		--enemy_update()
	end
	
	if btn(2) then
		plr.y -= 1
		plr.move = "up"
		plr.moving=true
		
		if plr.sp == 96 or plr.sp ==97 then plr.sp = 99 end 
		plr_up() 
		
		if collide_map(plr,"up",0) then
			plr.y += 1
		end
		if plr.y < 8 then
			updatemap()
			plr.y = 128
		end
		--enemy_update()
	elseif btn(3) then
		plr.y += 1
		plr.move = "down"
		plr.moving=true
		
		--animate 
		plr.flp = false
		plr_walk()
		
		if collide_map(plr,"down",0) then
			plr.y -= 1
			end
		if plr.y > 128 then
			updatemap()
			plr.y = 8   
			end
		--enemy_update()
	end
	
	
end



-->8
--enemy functions--
function genenemies()
		for i=3, 12 do
    for j= 3, 12 do
    	for k in all(tiles) do
    		if k.x != i and k.y != j then
    		  if difficulty == 0 then
    		    sc = flr(rnd(150))
    		  elseif difficulty == 1 then
    		    sc = flr(rnd(100))
    		  elseif difficulty == 2 then
    		    sc = flr(rnd(75))
    		  elseif difficulty == 3 then
    		    sc = flr(rnd(50))
    		  end
    		
        if sc == 0 and i!=1 and j!= 1 then
          temp = {}
          temp.x = i*8
          temp.y = j*8
          temp.w = 8
          temp.h = 8
          temp.moving = false
          temp.d = 0
          temp.acc = 0.35
          temp.anim = 0
          temp.move = "down"
          temp.health = 1
          spawnchance = flr(rnd(8))
          if spawnchance == 0 then
        	   temp.name = "rat"
        	   temp.s = 64
          elseif spawnchance == 1 then
        	   temp.name = "snake"
        	   temp.s = 66
          elseif spawnchance == 2 then
        	   temp.name = "skull"
        	   temp.s = 68
          elseif spawnchance == 3 then
        	   temp.name = "ghost"
        	   temp.s = 69
          elseif spawnchance == 4 then
        	   temp.name = "ghost2"
        	   temp.s = 72
          elseif spawnchance == 5 then
        	   temp.name = "eye"
        	   temp.s = 74
          elseif spawnchance == 6 then
        	   temp.name = "mouth"
        	   temp.s = 76
          elseif spawnchance == 7 then
        	   temp.name = "fire"
        	   temp.s = 86
          end
        add(enemy,temp)
      	end
     	end
     end
    end
  end
end

function enemy_update()
	for i in all(enemy) do
		if enemy_attack(i, i.move) then
			print("you're a weak child")
		else 
			x_diff = i.x - plr.x
			y_diff = i.y - plr.y 
			if abs(x_diff) > abs(y_diff) then
				if x_diff < 8 then
					enemy_move(i,"right")
				elseif x_diff > -8 then
					enemy_move(i,"left")
				end
			else
				if y_diff < 8 then
					enemy_move(i,"down")
				elseif y_diff > -8 then
					enemy_move(i,"up")
				end
			end
		end
	end
end

function enemy_move(enem,direction)
	if direction == "right" then
		enem.x += 1
		enem.move = "right"
		enem.moving=true
		if collide_map(enem,"right",0) then
			enem.x -= 1
			enemy_move("up")
			end
	elseif direction == "left" then
			enem.x -= 1
			enem.move = "left"
			enem.moving=true
			if collide_map(enem,"left",0) then
				enem.x += 1
				enemy_move("down")
				end
	elseif direction == "up" then
			enem.y -= 1
			enem.move = "up"
			enem.moving=true
			if collide_map(enem,"up",0) then
				enem.y += 1
				enemy_move("right")
				end
	elseif direction == "down" then
			enem.y += 1
			enem.move = "down"
			enem.moving=true
			if collide_map(enem,"down",0) then
				enem.y -= 1
				enemy_move("left")
				end
	end
end
	
-->8
-- animations --

--animation walk left, right, down 
d = 5 
function plr_walk() 
	d=d-1 
	if d < 0 then 
		plr.sp=plr.sp+1 
		if plr.sp>97 then plr.sp=96 end 
		d=5
	end 
end 

-- animation up 
d2=5 

function plr_up()
 
	d2=d2-1 
	if d2 < 0 then 
	plr.sp=plr.sp+1
	if plr.sp > 100 then plr.sp=99 end
	d2=5
	end 
end 
  
__gfx__
0000000000000000377777777777777733333333333333330000000000000000000000000000000000000000dd001550dddddddd011156dddd111550dddddddd
0000000000011000700000000000000000000000000000030000000000000000000000000000000000000000dd111d5055515551056155dddd551d50dddddddd
0070070001000010700000000000000088888888888888800000000000000000000000000000000000000000dd0016505d615d6105d111ddddd51750666d51dd
0007700001000010700000000000000022222222222222200000000000000000000000000000000000000000dd11111011111111055156dddd751110555516dd
0007700001000010700000000000000000000000000000030000000000000000000000000000000000000000dd00155015555155011156dddd751550111156dd
0070070001000010700000000000000033333333333333330000000000000000000000000000000000000000dd111d5015d6615505615ddddd111d50661156dd
0000000000011000700000000000000033333333333333330000000000000000000000000000000000000000dd551650dddddddd05d155dddd55175051615ddd
0000000000000000700000000000000033333333333333330000000000000000000000000000000000000000dd651110dddddddd055111dddd751110155155dd
3344433311111111111111113333333333333333333333333333333333333333333333333333333300000000dddddddddddddddddddddddddddddddddddddddd
3302033314244241144aa4413388388333883883333aaa333393333333a333a333a333333333323300000000d550055dd500005ddddddddddddddddddddddddd
330303332444444214000041383383383888888833aa99a333a3393333a33333333333333388333300000000505005055000000565166d5165101010dd1666d5
303730339aaaaaa940000004383333383888888833a9a9a333993a33aa3aa33333333a333888882300000000505aa505500000055515555155101010dd515555
087882032449944224499442338333833388888333a9aaa333aa393333a333333333a3a3328822330000000050599505500000051111111111111111ddd51111
0888220324422442244224423338383333388833333aaa33399a999333a33a3333333a333322333300000000505005055000000516d516d516d516d5dd651165
30822033022222200222222033338333333383333333333399a99aa9333333333a333333333223230000000050111105501111051555155515551555dd651615
33000333300000033000000333333333333333333333333333999993a33333333333333a333333330000000001111111011111110000000000000000dd651651
333339333339333333393333333933333399933333330443000000000000000000000000000000001111100000000000011111111111111111111111dd551551
33a3933333333393339a9333333a93333393933333307303000000000000000000000000000000001100000000000000000001111115111115111111ddd51615
33393933333393333339a933339aa333339993333307d033000000000000000000000000000000001000000000000000000000111551551511111111dd651166
339aaa933399a933339aa933339aa933333a333330dd0033000000000000000000000000000000001000000000000000000000111511115511111111dd651111
339aa993339aa9933399a9333399a933333aa33330d01103000000000000000000000000000000001000000000000000000000111115515511111111dd615555
34444933344449333332433333324333333a333330100103000000000000000000000000000000000000000000000000000000011515511151111111dd15d666
42232444422324443332433333324333333aa33330111103000000000000000000000000000000000000000000000000000000015511155151111111dddddddd
333332433333324333333333333333333333333333000033000000000000000000000000000000000000000000000000000000011511511111111111dddddddd
33333333333333333d033dd03d033dd03333333333333333000000000000000000000000000000000000000000000000000000001111115111111111156156dd
33900933330000333d800d033d800d033300000030111133000000000000000000000000000000000000000000000000000000001155155511111111516156dd
30955903305555030888dd030888dd033099499401515113000000000000000000000000000000001000000000000000000000001551115511111111561156dd
0599995005000050088d8203088d8203330940940111151300000000000000000000000000000000000000000000000000000001111551111111111111115ddd
004004000000000002828203308282033309409401551513000000000000000000000000000000001000000000000000000000011515115511111111555515dd
000000000000000002822803308220333a99aaa4015115130000000000000000000000000000000010000000000000000000000115511551111111115d6661dd
30000003300000033022203330220333a94aa44430155113000000000000000000000000000000001100000000000000000000111111515111111111dddddddd
333333333333333330220333330033330000000033011133000000000000000000000000000000001111110000000000000011115515511111111111dddddddd
33000033333003333333333333333333333333333333033333333333333333333300003333000033333333333333333333088833333333333088033333300333
30888803330880333333333333333333333776633033333333333033333333333000000330000003330003333300033330886823333333330888803333088033
08222280308228030b33333b0b3333333370766d3330003303000330330003333700700330700703306870333087703330860783333333330868803333088833
82f8222830872803bbb333b3bbb33bb3337006dd33070703307070333070703330000003300000030d8086030808760308070080300888333378823330888803
82882228382222830b3bbb330b3bb33b376666dd33000003300000333000003330000003300000030d80860308087d0308000078088888233738820330288823
0888888038288283333333333333333336d6ddd000000000000000033000003330000003300000030d808d030808dd0328800002888882228688222232288222
3000000330800803333333333333333336d60003300003333300003333000333300000033000000330d8d033308dd03330288800302222000882220030022200
33333333333333333333333333333333300033333333333333333333333333333003003330030033330003333300033333000033330000333000003333302033
33333333336333338888888893333333333339333333333333338333338333833333344444433333000000000000000033333330066003333333333330000333
33333333336333333828823339998333399833333333333338388833333883333334499999944333000000000000000033333306655503333333333301111033
3666333336663633383823239aa998839aa98333333983333383983333899833334999a4aa999433000000000000000033333065555003333333333311111033
333333333333363332382333a77a9998a77a98833a798833338aa9833383a9393499aaa4aaaa9903000000000000000033333655500040333333333310111103
3333666333636663333223339aa998839aa9833333983333339a3999389a7393499a4aaaaaa4a990000000000000000033333650033040333333333110011110
333333333363333332333333399983333998333333333333338a7a99399a7a9349aaaaaaaaaaaa90000000000000000033333603333340333333333170711110
3666333336663333333233333333338393333333333333333339a9933339a933494a0aaaaa0aa490000000000000000033333033333302033333333100011110
33333333333333333333333333933333333333a333333333333333333333333349aaa0a90000aa90000000000000000033333333333330033333333101111110
333333333333333333333333333333333333333333333343000000000000000049aaaaa0aa0aaa90000000000000000033333333333330203333333111111103
4399993333333333399993333999934333333333399993430000000000000000494aaaa0aaaaa490000000000000000033333333333333003333333111111103
4999ff9334999933999ff933999999433999934399999943000000000000000049aaaaa0aaaaaa90000000000000000033333333333333003333333011111113
4f0ff0f33499ff93f0ff0f339999994399999943999999f30000000000000000499aaa000aaaa990000000000000000033333333333333333333333011111113
43ffff33340ff0f33ffff333399993439999994339999d43000000000000000034994aa0aaa49903000000000000000033333333333333333333333311103113
fddddd3334ffff334f4444443dddddf339999343fdddd3330000000000000000334999aa4a999033000000000000000033333333333333333333333301103333
43ddddf33fdddd333ddddf33fdddd3433dddddf33dddd33300000000000000003334499999900333000000000000000033333333333333333333333333103313
3383383334ddddf33833833338338333fdddd3433833833300000000000000003333300000003333000000000000000033333333333333333333333313033333
3333333333333333333f333333330003330999000099903333333333336663363333333333333333000000000000000000000000000000000000000000000000
333633333333342333f7e3333330665330ff99999999ff0333333333363336333366333333333333000000000000000000000000000000000000000000000000
333633333333423333eee3333366555330ff79999999ff0333111333636633633663633333333333000000000000000000000000000000000000000000000000
3336333333342333333e333333655043330f70799079f03331111133636333633633633333666333000000000000000000000000000000000000000000000000
33363333334233333332333336503343330770077009909031111133633333633366333333366633000000000000000000000000000000000000000000000000
33999333342333333332333335033343330777777777999031000033363336333333363333333333000000000000000000000000000000000000000000000000
333c333333333333333233333033334330ff7777777ff90337333333336663633333333333333333000000000000000000000000000000000000000000000000
333c3333333333333333333333333343330000000000003333333333333333333333333333333333000000000000000000000000000000000000000000000000
33333033033333333333333333333333333333333333333333333333333333333300000000003333333300000000333333333333338333333333333333833333
333330030033333333333333333333333333333333333333333333333333333330dd010ddddd00333300dd01110d003333333333938333333333338333333333
33333003003033333333333333333333333333333300000000033333333333330dd01110dddddd0330dddd01110ddd0333333333998333333333333333333333
3333300300300333333333333333333333333333000000000000003333333333ddd01110ddddddd00ddddd01110dddd0338333339a8333333333333339333333
3033000000000333333333311301133333333330000000000000000333333333ddd01110ddddddd00ddddd01110dddd0333333339a9833333333338339933333
3001100000003333330113001000133333333330000000000000000033333333ddd01110ddddddd00dddddd010ddddd033833388aa9933333383338899933933
30000000001333333301000000000333333333300000000000000000333333330dd01110dddddd0330dddddd0ddddd0338833389aaa9333338833389aaa93333
330000000133333330000000000003333333330000000000000000003333333330d0010ddddd00333300dddddddd00333893380000a938333893380000a93933
33300001111333333000000000000033333333000000000000000000033333330000000000000000000000000000000038a3300000093338300a900000099008
333331001113333330000000000000333333300000ddd0100dd00000033333330440000000000000000000000000044039a38010010938833800a01001090083
3333300001333333300000000dd0003033333000dddd01110dddd000003333330444444400000000000000004444444039aaa901100999833300090110000033
333300000133333330d00dd0030d0d033333000ddddd01110ddddd00003333330044222244444444444444442222240080000001100000038300000110000033
d0000000111333333ddd0d3d033333333333000ddddd01110ddddd00003333330042444422222222222222224444240038000011110000833303001111003033
3dd000d0dd1113333333d333333333333333000ddddd01110ddddd00003333330042444444444444444444444444240033003011110300333333301111033333
3333d33333ddd333333333333333333333300000dddd01110dddd000003333330042444444444444444444444444240033033300003330333333330000333333
333333333333333333333333333333333330000000dd00100dd00000003333330042444444444444444444444444240033333333333333333333333333333333
33333333333333333333333333333333330000000000000000000000001333330004244444444444444444444442400033333300003333330000000000000000
33333333333333333333333333333333331000000000000000000000001333330004244444444444444444444442400033333000000333330000000000000000
33333000333333333333300033333333331000000000000000000000001333330004244444444444444444444442400033333010010333330000000000000000
33330ddd0033333333330ddd00333333331000000000000000000000001333330004244444444444444444444442400033333301100333330000000000000000
333330dddd033333333330dddd033333331000000000000000000000001133330004244444444444444444444442400033000001100000330000000000000000
3333111111d033333333111111d03333331000000000000000000000001133330004244444444444444444444442400030000000000000030000000000000000
33311111111d033333311111111d0331331100000000000000000000001133330004244444444444444444444442400033003300330300330000000000000000
33022221111110033311111111111001311100000000000000000000001111330004244444444444444444444442400033033333333330330000000000000000
32260602011111103101111111111111311100000000000000000000001111130042444444444444444444444444240000000000000000000000000000000000
32000006211111113211111111111111311110000000000000000000001111130042444444444444444444444444240000000000000000000000000000000000
3260000021111111022221101111111033d1110000000011110000000111d1130042444444444444444444444444240000000000000000000000000000000000
122060602111000111222222111100033333110000000111110000000111dd330042444422222222222222224444240000000000000000000000000000000000
000222222001133000000000011033333333dd100000111111111100011dd3330044222244444444444444442222440000000000000000000000000000000000
33300000033003333333333011033333333333d1100111d111ddddd1133333330444444400000000000000004444444000000000000000000000000000000000
333333333333333333333333003333333333331111dddd3311333333333333330440000000000000000000000000044000000000000000000000000000000000
33333333333333333333333333333333333331111333333333333333333333330000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000100000000000000010101010100030100000000000000000000010101000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1f1d1e1e1d1d2d3d3d2d1d1e1e1d1d0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d2d2d2d2d2d3d3d2d2d2d2d2d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b2d2d2d3d3d3d3d3d2d2d3d3d3d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d2d2d3d3d3d3d3d2d3d3d3d3d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d2d2d2d2d2d2d2d2d2d2d2d2d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d3d3d3d3d3d3d2d2d2d2d2d2d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2d3d3d3d3d3d3d3d2d2d2d2d2d2d2d2d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2d3d3d3d3d2d2d2d2d2d2d3d3d3d2d2d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2d3d3d3d2d2d2d2d2d2d2d3d3d3d2d2d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d2d2d2d3d3d3d3d2d2d3d3d3d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d2d2d2d2d2d2d3d2d2d2d3d3d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e2d2d2d2d2d2d2d2d2d2d2d3d3d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b2d2d2d2d3d3d3d2d2d2d2d2d2d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b2d2d2d2d3d3d2d2d2d2d2d2d2d2d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2f0c0c0c0c0c3d3d3d3d0c0c0c0c0c3f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
